// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show TargetPlatform, defaultTargetPlatform, kIsWeb;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptionsStg.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptionsStg have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptionsStg are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: String.fromEnvironment("ANDROID_API_KEY"),
    appId: String.fromEnvironment("ANDROID_APP_ID"),
    messagingSenderId: String.fromEnvironment("ANDROID_SENDER_ID"),
    projectId: String.fromEnvironment("ANDROID_PROJECT_ID"),
    storageBucket: String.fromEnvironment("ANDROID_STORAGE_BUCKET"),
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: String.fromEnvironment("IOS_API_KEY"),
    appId: String.fromEnvironment("IOS_APP_ID"),
    messagingSenderId: String.fromEnvironment("IOS_SENDER_ID"),
    projectId: String.fromEnvironment("IOS_PROJECT_ID"),
    storageBucket: String.fromEnvironment("IOS_STORAGE_BUCKET"),
    androidClientId: String.fromEnvironment("IOS_ANDROID_CLIENT_ID"),
    iosClientId: String.fromEnvironment("IOS_IOS_CLIENT_ID"),
    iosBundleId: String.fromEnvironment("IOS_BUNDLE_ID"),
  );
}
